class SofarPowerFlowCard extends HTMLElement {
    static getConfigElement() {
        return document.createElement("sofar-power-flow-card-editor");
    }

    static getStubConfig() {
        return {
            entities: {
                solar: "sensor.pv1_power",
                grid: "sensor.activepowerpcc",
                home: "sensor.activepowerloadsys"
            }
        };
    }

    setConfig(config) {
        if (!config.entities) {
            throw new Error("Entities must be specified");
        }
        this._config = config;
        this.render();
    }

    set hass(hass) {
        this._hass = hass;
        this.render();
    }

    render() {
        if (!this._hass || !this._config) return;

        if (!this.content) {
            this.innerHTML = `
                <ha-card>
                    <div class="card-content">
                        <div id="values"></div>
                    </div>
                </ha-card>
            `;
            this.content = this.querySelector('#values');
        }

        const entities = this._config.entities;
        let html = '';

        // Simple list of values
        for (const [key, entity_id] of Object.entries(entities)) {
            const state = this._hass.states[entity_id];
            html += `
                <div style="margin: 8px 0;">
                    <strong>${key}:</strong> 
                    ${state ? state.state + (state.attributes.unit_of_measurement || '') : 'N/A'}
                </div>
            `;
        }

        this.content.innerHTML = html;
    }
}

// Register the card
customElements.define("sofar-power-flow-card", SofarPowerFlowCard);

// Add to custom cards
window.customCards = window.customCards || [];
window.customCards.push({
    type: "sofar-power-flow-card",
    name: "Sofar Power Flow Card",
    preview: false,
    description: "Basic power flow visualization"
});
